// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { PaginationBlockViewData, PaginationBlockViewResponse, PostCreateBlockItemViewData, PostCreateBlockItemViewResponse, DeleteBlockItemViewData, ReadBlockItemViewData, ReadBlockItemViewResponse, UpdateBlockItemViewData, UpdateBlockItemViewResponse, RunActionBuildBlockItemViewData, RunActionBuildBlockItemViewResponse, PostSampleWebsocketViewData, PostSampleWebsocketViewResponse } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Pagination
 */
export const paginationBlockView = <ThrowOnError extends boolean = false>(options?: Options<PaginationBlockViewData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<PaginationBlockViewResponse, unknown, ThrowOnError>({
        url: '/api/blocks/',
        ...options
    });
};

/**
 * Post
 */
export const postCreateBlockItemView = <ThrowOnError extends boolean = false>(options: Options<PostCreateBlockItemViewData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostCreateBlockItemViewResponse, unknown, ThrowOnError>({
        url: '/api/blocks/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Delete
 */
export const deleteBlockItemView = <ThrowOnError extends boolean = false>(options: Options<DeleteBlockItemViewData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<unknown, unknown, ThrowOnError>({
        url: '/api/blocks/{object_id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Get
 */
export const readBlockItemView = <ThrowOnError extends boolean = false>(options: Options<ReadBlockItemViewData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ReadBlockItemViewResponse, unknown, ThrowOnError>({
        url: '/api/blocks/{object_id}/',
        ...options
    });
};

/**
 * Patch
 */
export const updateBlockItemView = <ThrowOnError extends boolean = false>(options: Options<UpdateBlockItemViewData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<UpdateBlockItemViewResponse, unknown, ThrowOnError>({
        url: '/api/blocks/{object_id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Post
 */
export const runActionBuildBlockItemView = <ThrowOnError extends boolean = false>(options: Options<RunActionBuildBlockItemViewData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<RunActionBuildBlockItemViewResponse, unknown, ThrowOnError>({
        url: '/api/blocks/{object_id}/build/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Get
 */
export const postSampleWebsocketView = <ThrowOnError extends boolean = false>(options: Options<PostSampleWebsocketViewData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSampleWebsocketViewResponse, unknown, ThrowOnError>({
        url: '/api/blocks/websocket-test/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};