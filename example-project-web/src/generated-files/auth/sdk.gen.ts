// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { AuthViewData, AuthViewResponse, LoginViewData, LoginViewResponse, LogoutViewData, LogoutViewResponse, ChangePasswordViewData, ChangePasswordViewResponse, CheckTemporaryAccessViewData, CheckTemporaryAccessViewResponse, ForgotMyPasswordViewData, ForgotMyPasswordViewResponse, ChangePasswordByAccessIdViewData, ChangePasswordByAccessIdViewResponse } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Get
 */
export const authView = <ThrowOnError extends boolean = false>(options?: Options<AuthViewData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<AuthViewResponse, unknown, ThrowOnError>({
        url: '/auth/',
        ...options
    });
};

/**
 * Get
 */
export const loginView = <ThrowOnError extends boolean = false>(options: Options<LoginViewData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<LoginViewResponse, unknown, ThrowOnError>({
        url: '/auth/login/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Get
 */
export const logoutView = <ThrowOnError extends boolean = false>(options: Options<LogoutViewData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<LogoutViewResponse, unknown, ThrowOnError>({
        url: '/auth/logout/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Get
 */
export const changePasswordView = <ThrowOnError extends boolean = false>(options: Options<ChangePasswordViewData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<ChangePasswordViewResponse, unknown, ThrowOnError>({
        url: '/auth/change-password/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Get
 */
export const checkTemporaryAccessView = <ThrowOnError extends boolean = false>(options: Options<CheckTemporaryAccessViewData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CheckTemporaryAccessViewResponse, unknown, ThrowOnError>({
        url: '/auth/check-temporary-access/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Get
 */
export const forgotMyPasswordView = <ThrowOnError extends boolean = false>(options: Options<ForgotMyPasswordViewData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<ForgotMyPasswordViewResponse, unknown, ThrowOnError>({
        url: '/auth/forgot-my-password/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Get
 */
export const changePasswordByAccessIdView = <ThrowOnError extends boolean = false>(options: Options<ChangePasswordByAccessIdViewData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<ChangePasswordByAccessIdViewResponse, unknown, ThrowOnError>({
        url: '/auth/change-password-by-access-id/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};