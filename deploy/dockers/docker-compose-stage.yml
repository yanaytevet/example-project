version: '3.8'

name: example_project_docker_group
services:
  example_db:
    restart: always
    shm_size: 6G
    image: postgres:14-alpine
    volumes:
      - db_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=db_admin
      - POSTGRES_PASSWORD=<db_password>
      - POSTGRES_DB=example_db
    expose:
      - 5432

  redis:
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    expose:
      - 6379

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:latest
    expose:
      - 5672
    restart: on-failure
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  example_project_backend:
    image: example_project_backend
    build:
      context: ../../example_project_backend
    volumes:
      - logs:/var/log/example-project/
      - ../../example_project_backend:/usr/src/app
    environment:
      - DJANGO_SETTINGS_MODULE=example_project_backend.prod_settings
    ports:
      - 8000:8000
    expose:
      - 8000
    depends_on:
      - example_db
      - redis
      - rabbitmq
    command: sh -c "pip install -r requirements.txt &&
      python manage.py migrate &&
      python manage.py collectstatic  --noinput &&
      uvicorn example_project_backend.asgi:application --host 0.0.0.0 --port 8000 --workers 4"

  main_celery_worker:
    image: example_project_backend
    volumes:
      - logs:/var/log/example-project/
      - ../../example_project_backend:/usr/src/app
    environment:
      - DJANGO_SETTINGS_MODULE=example_project_backend.prod_settings
    depends_on:
      - example_project_backend
    restart: always
    command: sh -c "pip install -r requirements.txt &&
      celery -A example_project_backend worker --concurrency=1 -Q main"

  emails_celery_worker:
    image: example_project_backend
    volumes:
      - logs:/var/log/example-project/
      - ../../example_project_backend:/usr/src/app
    environment:
      - DJANGO_SETTINGS_MODULE=example_project_backend.prod_settings
    depends_on:
      - example_project_backend
    restart: always
    command: sh -c "pip install -r requirements.txt &&
      celery -A example_project_backend worker --concurrency=1 -Q emails"

  celery_scheduler:
    image: example_project_backend
    volumes:
      - logs:/var/log/example-project/
      - ../../example_project_backend:/usr/src/app
    environment:
      - DJANGO_SETTINGS_MODULE=example_project_backend.prod_settings
    depends_on:
      - example_project_backend
    restart: always
    command: sh -c "pip install -r requirements.txt &&
      celery -A example_project_backend beat --scheduler django_celery_beat.schedulers:DatabaseScheduler"

  nginx_service:
    build:
      context: nginx
    volumes:
      - ../../example-project-web/dist/example-project-web:/example-project-web
      - ../../../nginx-conf:/etc/nginx/conf.d
      - ../../../letsencrypt:/etc/letsencrypt
      - ../../example_project_backend/static:/admin-static/static
    ports:
      - 80:80
      - 443:443
    expose:
      - 80
      - 443
    depends_on:
      - example_project_backend

volumes:
  db_data:
  logs:
  rabbitmq_data:
